season_API <- paste0("https://essence.syndromicsurveillance.org/nssp_essence/api/timeSeries?endDate=",
season_pull_end, "&medicalGrouping=ili&geography=il_cook&percentParam=medicalGrouping&geographySystem=region&datasource=va_er&detector=nodetectordetector&startDate=",
season_pull_start, "&timeResolution=weekly&hasBeenE=1&medicalGroupingSystem=chiefcomplaintsubsyndromes&userId=660&site=890&aqtTarget=TimeSeries")
#Get data
df <- nssp_get_table(season_API)
#modify 53 week years according to methodology detailed in report (drop week 35 and move everything one week forward)
if (nrow(df) == 39) {
df <- df[-1, ]
}
#clean data
df <- df %>%
select(count) %>%
mutate(season = paste0(year,"-",year-1999)) %>%
cbind(weekStarts)
#return dataset
return(df)
}
#generating past seasons of ili data
#essence_ili <- map_df(c(season-1,season-2,season-3), season_fetch)
#generating past seasons of ili data
essence_complete <- map_df(c(2010:season-1), season_fetch)
knitr::opts_chunk$set(echo = TRUE)
#  \addtolength{\textheight}{-43pt}
#==========================SET UP==========================#
#Loading packages
library(cdcfluview)
library(RColorBrewer)
library(rgdal)
library(mapproj)
library(jsonlite)
library(httr)
library(magrittr)
library(dplyr)
library(keyring)
library(lubridate)
library(MMWRweek)
library(tidyr)
library(purrr)
library(ggplot2)
library(qdap)
library(ggthemes)
library(readxl)
library(stringr)
library(scales)
library(kableExtra)
library(gridExtra)
library(grid)
library(gtable)
library(RGraphics)
#Setting working directory
setwd("S:/Enhanced Surveillance/Flu Surveillance/Report Creation")
#Setting this week's risk level  ===== CHANGE EACH WEEK ======
risk_level <- "high"
school_clusters <- 4
outbreaks <- 0
peds_deaths <- 0
#Setting season info ===== CHANGE AT THE BEGINNING OF EACH SEASON ======
season <- 2019
baseline_ess <- 1.32
baseline_sent <- 0.71
#Setting week, and dates   ===== WILL NEED TO MANUALLY SET WEEK IF NOT RUNNING ON A FRIDAY ======
#week <- 47
week <- as.numeric(MMWRweek(Sys.Date())[2] - 1)
start <- MMWRweek2Date(year(Sys.Date()), week)
end <- start + 6
#Setting up week starts and years list for graphs
weekStarts <- c(do.call(c, purrr::map(35:52, MMWRweek2Date, MMWRyear = season)) %>% format("%b %d"),
do.call(c, purrr::map(1:20, MMWRweek2Date, MMWRyear = season+1)) %>% format("%b %d"))
weekStarts <- data.frame(weekStarts, week = factor(c(35:52, 1:20),levels = c(35:52, 1:20), ordered = TRUE))
rpt_years <- c(season, season - 1, season - 2, season - 3)
#Storing 3 blues palette for graphs - based off tableau 10 blue
#blue_pal <- c("#1f77b4", "#7dadd9", "#c9e5ff")
blue_pal <- c("#91D1FF", "#619FCC", "#335E7C")
rpt_gray <- "#EAF0F2"
#Storing path to data
data_path <- paste0("S:/Enhanced Surveillance/Flu Surveillance/", season, "_", season-1999)
#==========================ESSENCE DATA==========================#
#function to get data from NSSP
NSSP_GET = function(url){
#download NSSP API url, get username and password, and error check for incorrect username/password
#enter NSSP username and then password if not in system- only has to be done once per computer
if(!("NSSP_username" %in% key_list()$service)|!("NSSP_password" %in% key_list()$service)){
message("Enter NSSP username")
key_set("NSSP_username")
message("Enter NSSP password")
key_set("NSSP_password")
}
#authenticate and download ESSENCE API url
out = GET(url,
authenticate(key_get("NSSP_username"), key_get("NSSP_password")))
#ask for username and password again if exit status is 401
if(out$status_code == 401){
message("Invalid user credentials, try again\n")
key_delete("NSSP_password")
NSSP_GET(url)
}
else{return(out)}
}
#function to call get function and format output
nssp_get_table = function(url){
#download NSSP API url as a table (transformed from JSON)
table =  NSSP_GET(url) %>% content() #extract table contents
if(length(table) == 1){ #sometimes all in single upper level list
table = table[[1]]
}
else if(length(table) == 2 & length(table[[1]] == 1)){ #time series data formatted like this
table = table[[2]]
}
table = lapply(table, function(x){return(x)}) %>% bind_rows() #format to dataframe structure
return(table)
}
#=========SEASON=========#
#Function to get past years of ILI data
season_fetch <- function(year) {
#get flu year start date
season_pull_start <- format(MMWRweek2Date(MMWRyear = year, MMWRweek = 35), "%d%b%Y")
#get flu year end date
season_pull_end <- format(MMWRweek2Date(MMWRyear = (year + 1), MMWRweek = 20, MMWRday = 7), "%d%b%Y")
#Construct API
season_API <- paste0("https://essence.syndromicsurveillance.org/nssp_essence/api/timeSeries?endDate=",
season_pull_end, "&medicalGrouping=ili&geography=il_cook&percentParam=medicalGrouping&geographySystem=region&datasource=va_er&detector=nodetectordetector&startDate=",
season_pull_start, "&timeResolution=weekly&hasBeenE=1&medicalGroupingSystem=chiefcomplaintsubsyndromes&userId=660&site=890&aqtTarget=TimeSeries")
#Get data
df <- nssp_get_table(season_API)
#modify 53 week years according to methodology detailed in report (drop week 35 and move everything one week forward)
if (nrow(df) == 39) {
df <- df[-1, ]
}
#clean data
df <- df %>%
select(count) %>%
mutate(season = paste0(year,"-",year-1999)) %>%
cbind(weekStarts)
#return dataset
return(df)
}
#generating past seasons of ili data
#essence_ili <- map_df(c(season-1,season-2,season-3), season_fetch)
#generating past seasons of ili data
essence_complete <- map_df(c(2010:season-1), season_fetch)
#Constructing current year API
current_API <- paste0("https://essence.syndromicsurveillance.org/nssp_essence/api/timeSeries?endDate=",
format(end, "%d%b%Y"), "&medicalGrouping=ili&geography=il_cook&percentParam=medicalGrouping&geographySystem=region&datasource=va_er&detector=nodetectordetector&startDate=",
format(MMWRweek2Date(MMWRyear = season, MMWRweek = 35), "%d%b%Y"), "&timeResolution=weekly&hasBeenE=1&medicalGroupingSystem=chiefcomplaintsubsyndromes&userId=660&site=890&aqtTarget=TimeSeries")
#pulling current year data
curr_ili <- nssp_get_table(current_API) %>%
select(date, count) %>%
mutate(date = as.Date(date),
season = paste0(season,"-",season-1999),
weekStarts = format(date, "%b %d"),
week = MMWRweek(date)[[2]]) %>%
select(-date)
#creating trend variable
ess_trend <- curr_ili %>%
mutate(week_before = lag(count),
trend = ifelse(count > week_before, "increasing", "decreasing"))
#calculating current trend length for summary
ess_trend_weeks <- (length(ess_trend$trend) - tail(which(ess_trend$trend != ess_trend$trend[ess_trend$week == week]), n=1)) %>%
as.numeric() %>% replace_number() %>%
paste(ifelse(.=="one", "week", "weeks")) #number of weeks ILI has been increasing/decreasing
#formatting baseline to include in dataset
base <- data.frame(baseline_ess, weekStarts) %>%
rename(count = baseline_ess) %>%
mutate(season = "Baseline")
#Merging all data for graphing
essence_ili <- rbind(curr_ili, essence_complete, base)
#=========AGE=========#
#Constructing API for age data
age_API <- paste0("https://essence.syndromicsurveillance.org/nssp_essence/api/tableBuilder?endDate=",
format(end, "%d%b%Y"), "&medicalGrouping=ili&geography=il_cook&percentParam=medicalGrouping&geographySystem=region&datasource=va_er&detector=nodetectordetector&startDate=",
format(MMWRweek2Date(MMWRyear = season, MMWRweek = 35), "%d%b%Y"), "&timeResolution=weekly&hasBeenE=1&medicalGroupingSystem=chiefcomplaintsubsyndromes&userId=660&site=890&aqtTarget=TableBuilder&rowFields=timeResolution&columnField=age")
#pulling data from essence and cleaning
age_ili <- nssp_get_table(age_API) %>%
select(timeResolution, age, count) %>%
filter(age != "Unknown") %>%
separate(col = timeResolution, into = c("year", "week"), sep = "-") %>%
mutate(weekStarts = format(MMWRweek2Date(MMWRyear = as.numeric(year), MMWRweek = as.numeric(week)), "%b %d"),
age = paste(age, "yrs")) %>%
select(-year)
#getting reference all age lines from season data
curr_age_ref <- curr_ili %>%
select(-season) %>%
mutate(age = paste0("All ages ", season, "-", season-1999))
past_age_ref <- essence_ili %>%
filter(grepl(.GlobalEnv$season-1, season)) %>%
select(-season) %>%
mutate(age = paste0("All ages ", season-1, "-", season-2000))
#merging all data for graph
age_ili <- rbind(age_ili, curr_age_ref, past_age_ref)
#=========REGION=========#
#function to get current season for other regions
region_fetch <- function(region) {
if (region == "illinois") {
api <- paste0("https://essence.syndromicsurveillance.org/nssp_essence/api/timeSeries?endDate=",
format(end, "%d%b%Y"),"&medicalGrouping=ili&percentParam=medicalGrouping&geographySystem=region&datasource=va_er&detector=nodetectordetector&startDate=",
format(MMWRweek2Date(MMWRyear = season, MMWRweek = 35), "%d%b%Y"), "&timeResolution=weekly&hasBeenE=1&medicalGroupingSystem=chiefcomplaintsubsyndromes&userId=660&site=890&aqtTarget=TimeSeries")
} else{
api <- paste0("https://essence.syndromicsurveillance.org/nssp_essence/api/timeSeries?endDate=",
format(end, "%d%b%Y"),"&medicalGrouping=ili&geography=il_",
region, "&percentParam=medicalGrouping&geographySystem=region&datasource=va_er&detector=nodetectordetector&startDate=",
format(MMWRweek2Date(MMWRyear = season, MMWRweek = 35), "%d%b%Y"), "&timeResolution=weekly&hasBeenE=1&medicalGroupingSystem=chiefcomplaintsubsyndromes&userId=660&site=890&aqtTarget=TimeSeries")
}
df <- nssp_get_table(api) %>%
select(date, count) %>%
mutate(date = as.Date(date),
season = paste0(season,"-",season-1999),
weekStarts = format(date, "%b %d"),
week = MMWRweek(date)[[2]],
region = region) %>%
select(-date)
return(df)
}
#pulling data
region_ili <- map_df(c("chicago", "dupage", "illinois"), region_fetch) %>%
rbind(curr_ili %>% mutate(region = "Cook")) %>%
mutate(region = recode(region, `chicago` = "Chicago", `dupage` = "DuPage", illinois = "Illinois"))
#==========================SENTINEL PROVIDER DATA==========================#
#Importing data
sent <- read_excel(path = paste0(data_path,"/SentinelHospitalData.xlsx"), skip = 1)
#Removing spaces from column names
names(sent) <- gsub(" ", "_", names(sent))
#Cleaning data
sent <- sent %>%
select(Season, week = CDC_Week, count = `%_ILI_C`) %>%
filter(grepl(paste(rpt_years, collapse = "|"), Season)) %>%  #if sentinels are added to the app, this should be moved to the graph section
mutate(week = factor(week, levels = weekStarts$week)) %>%
left_join(.,weekStarts) %>%
filter(!(is.na(count)) & !(is.na(week))) %>%
mutate(week = as.numeric(as.character(week))) %>%
filter(week > 34 | week <21)
#formatting baseline to include in dataset
base_sent <- data.frame(baseline_sent, weekStarts) %>%
rename(count = baseline_sent, )%>%
mutate(Season = "Baseline")
#merging all data for graph
sent <- rbind(sent, base_sent)
#creating trend variable
sent_trend <- sent %>%
filter(grepl(.GlobalEnv$season, Season)) %>%
mutate(week_before = lag(count),
trend = ifelse(count > week_before, "increasing", "decreasing"))
#calculating current trend length for summary
sent_trend_weeks <- (length(sent_trend$trend) - tail(which(sent_trend$trend != sent_trend$trend[sent_trend$week == week]), n=1)) %>%
as.numeric() %>% replace_number() %>%
paste(ifelse(.=="one", "week", "weeks")) #number of weeks ILI has been increasing/decreasing
#==========================LAB DATA==========================#
#Importing data
lab <- read_excel(path = paste0(data_path,"/LabData.xlsx"), sheet = 'Total Graph Data', skip = 1,
col_names = c("season", "week", "A_H3N2", "A_Unknown", "A_H1N1", "B", "Total_Pos", "Percent_Pos"),
col_types = c("text", "skip", "text", "skip", "numeric", "numeric", "numeric", "skip", "numeric", "numeric", "skip", "numeric", "skip"))
#cleaning data
lab <- lab %>%
mutate(week = factor(week, levels = weekStarts$week)) %>%
left_join(.,weekStarts) %>%
mutate(week = as.numeric(as.character(week))) %>%
filter(week > 34 | week <21)
#==========================HOSPITALIZATION DATA==========================#
#Importing data
curr_icu <- read_excel(path = paste0(data_path,"/Influenza ICU Hosp for Surveillance temp.xlsx"))
#Removing spaces from column names
names(curr_icu) <- gsub(" ", "_", names(curr_icu))
#Converting lab variables to lower case
labcols <- grepl("Test|Organism|^Comment", names(curr_icu))
curr_icu[labcols] <- purrr::map(curr_icu[labcols], tolower)
#Creating variable to indicate if flu lab test is present  -- NOTE: DOES NOT FLAG CASES WITH ONLY 'POSITIVE' OR 'DETECTED' FOR RESPIRATORY PANELS
curr_icu$flu_lab <- apply(curr_icu, 1, function(x){return(sum(grepl("flu|h1n1|h3n2",x[labcols]))>0)})
#Ordering records to prepare for deduplication (duplicates with lab confirmation will be ordered first)
curr_icu <- curr_icu[order(curr_icu$State_Case_Number, -curr_icu$flu_lab), ]
#Removing duplicates (keeping those with lab confirmation if present)
curr_icu <- curr_icu[!duplicated(curr_icu$State_Case_Number), ]
#Filtering data set by week, jurisdiction, and case status and creating new vars
curr_icu <- curr_icu %>%
mutate(Admission_Date = as.Date(Admission_Date, format= "%Y-%m-%d"),
Case_Status = ifelse(is.na(Case_Status) & flu_lab == TRUE, "Flu Lab Present", Case_Status)) %>%
filter(District != "nowhere'sville" &  Admission_Date >= (MMWRweek2Date(season, 35)) & Admission_Date <= end &
Case_Status %in% c("Probable", "Confirmed", "Flu Lab Present")) %>%
mutate(`Current_Age_(yrs)` = as.numeric(`Current_Age_(yrs)`),
Age_Groups_Calc = cut(`Current_Age_(yrs)`,
breaks = c(0, 4, 17, 44, 64, 105),
labels = c("0-04", "05-17", "18-44", "45-64", "65+"), include.lowest = TRUE),
week = ifelse(is.na(Admission_Date), NA, MMWRweek(Admission_Date)[[2]]),
District = str_to_title(District))
#Creating ages and districts list
ages <- data.frame(Age_Groups_Calc = factor(c("0-04", "05-17", "18-44", "45-64", "65+"), levels = c("0-04", "05-17", "18-44", "45-64", "65+"),
ordered = T),
Pop = c(143264, 604967, 755135, 452627, 311216))
districts <- data.frame(District = factor(c("North", "West", "Southwest", "South"), levels = c("North", "West", "Southwest", "South"),
ordered = T),
Pop = c(927557, 503973, 363887, 471792))
#Creating ages count
age_count <- curr_icu %>%
group_by(Age_Groups_Calc) %>%
dplyr::summarize(Count = n()) %>%
ungroup() %>%
full_join(., ages) %>%
mutate(Count = replace_na(Count, 0),
Rate = round((Count/Pop)*100000, 2)) %>%
rename(Category = Age_Groups_Calc)
#Creating district count
district_count <- curr_icu %>%
group_by(District) %>%
dplyr::summarize(Count = n()) %>%
ungroup() %>%
full_join(., districts) %>%
mutate(Count = replace_na(Count, 0),
Rate = round((Count/Pop)*100000, 2)) %>%
rename(Category = District)
#Creating total count
total_count <- data.frame(Category = "Total", Count = nrow(curr_icu), Pop = 2267209) %>%
mutate(Rate = round((Count/Pop)*100000, 2))
#Combining data for table
icu_table <- rbind(age_count, district_count, total_count) %>%
mutate(Category = factor(Category, levels = c("0-04", "05-17", "18-44", "45-64", "65+", "North", "West", "Southwest", "South", "Total"), ordered = T)) %>%
arrange(Category) %>%
select(-Pop)
#Creating all weeks count
icu_weeks <- curr_icu %>%
group_by(week) %>%
dplyr::summarize(count = n()) %>%
ungroup() %>%
mutate(week = factor(week)) %>%
full_join(., weekStarts) %>%
mutate(week = as.numeric(as.character(week))) %>%
filter(week > 34 | week < 21) %>%
mutate(Season = paste0(season, "-", season-1999),
count = replace_na(count, 0))
#Creating factor week var
icu_weeks$weekStarts <- factor(icu_weeks$weekStarts, levels = weekStarts$weekStarts, ordered = T)
#Adding cumulative sum and rate
icu_weeks <- icu_weeks %>%
filter(weekStarts <= format(start, "%b %d")) %>%
arrange(weekStarts) %>%
mutate(sum = cumsum(count),
rate = (sum/2267209)*100000)
#Importing historical data
hist_icu <- read_excel(path = paste0(data_path,"/ICU_Hospitalizations_Historical.xlsx"), sheet = "Data", skip = 1) %>%
select(week:`2018-19`) %>%
gather(Season, count, 2:length(.)) %>%
mutate(week = factor(week),
Season = factor(Season)) %>%
left_join(., weekStarts)
#Merging all data and creating historical cumulative sums
final_icu <- split(hist_icu, hist_icu$Season) %>%
purrr::map(~mutate(.x, sum = cumsum(count), rate = (sum/2267209)*100000)) %>%
bind_rows() %>%
rbind(icu_weeks)
#Cumulative sum for sentence
icu_total <- if (icu_weeks[icu_weeks$week == week, 5] == 1) {
"One ICU hospitalization has"
} else {
paste(str_to_sentence(replace_number(icu_weeks[icu_weeks$week == week, 5])), "ICU hospitalizations have")
}
#==========================PI DEATH DATA==========================#
pi <- read_excel(path = paste0(data_path,"/PIDeaths.xlsx"), sheet = 'CDC Output', skip = 1,
col_names = c("Season", "week", "Baseline", "Threshold", "Actual", "Smoothed"),
col_types = c("text", "skip", "numeric","skip","numeric","numeric","skip","numeric","numeric"))
pi_week_val <- pi[max(which(!is.na(pi$Actual))), ]
pi<- pi %>%
mutate(weekstring = paste0(ifelse(week>=40, substr(Season,1,4), paste0(substr(Season,1,2), substr(Season, 6,7))),
sprintf("%02d", week), "0"),
date_ish = as.Date(weekstring, "%Y%U%w")) %>%  #Not calculating for dates in zero weeks - don't understand why as %U has zero weeks???
gather(Value_type, Percent, Baseline:Smoothed) %>%
filter(grepl(season, Season) | grepl(paste(rpt_years, collapse = "|"), Season))
#Creating factor option
pi$week_fct <- factor(pi$week, levels = c(40:53,0:39), ordered = TRUE)
#Prepping data for season graph
essence_ili_graph <- essence_ili %>%
filter(grepl(paste(rpt_years, collapse = "|"), season) | grepl(.GlobalEnv$season, season) | season == "Baseline")
essence_ili_graph$weekStarts <- factor(essence_ili_graph$weekStarts, levels = weekStarts$weekStarts, ordered = T)
#Adding gray box text
ess_grob <- splitTextGrob("A 2010 influenza modeling study concluded mass gatherings and traveling can worsen the overall attack rate and peak prevalence, when they occur close to the peak of an influenza epidemic. Emphasize respiratory hygiene during holiday gatherings.", gp = gpar(fontsize=9.5))
#Season graph
ggplot(data = essence_ili_graph, aes(x = weekStarts, y = count, group = season)) +
geom_line(aes(linetype = season, color = season), size = 1) +
labs(title = "Emergency Department Syndromic Surveillance", x = "Week Start Date", y = "% of Visits for ILI") +
#scale_color_manual(values = c("#8eb4e3", "#0070c0", "#95b3d7", "#ff0000", "#333333")) +
scale_color_manual(values = c(blue_pal, "#ff0000", "#333333")) +
#scale_linetype_manual(values = c("longdash", "dotdash", "solid", "solid", "dashed")) +
scale_linetype_manual(values = c(rep("solid", 4), "dashed")) +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5), legend.title = element_blank(), legend.position = "top",
legend.text = element_text(size = 10), axis.title = element_text(size = 10, face = "bold"), axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 70, hjust = 1), panel.grid = element_blank(), panel.background = element_blank(), axis.line = element_line()) +
annotate("rect", xmin = 1.5, xmax = 15.5, ymin = 4, ymax = 8, fill = rpt_gray) +
annotation_custom(ess_grob, xmin = 2, xmax = 15, ymin = 4.1, ymax = 7.75)
#Prepping data for age graph
age_ili$weekStarts <- factor(age_ili$weekStarts, levels = weekStarts$weekStarts, ordered = T)
#Adding gray box text
age_grob <- splitTextGrob("A 2010 influenza modeling study concluded mass gatherings and traveling can worsen the overall attack rate and peak prevalence, when they occur close to the peak of an influenza epidemic. Emphasize respiratory hygiene during holiday gatherings.", gp = gpar(fontsize=9.5))
#age graph
ggplot(data = age_ili, aes(x = weekStarts, y = count, group = age)) +
geom_line(aes(linetype = age, color = age), size = 1) +
labs(title = "Syndromic Surveillance by Age Group", x = "Week Start Date", y = "% of Visits for ILI") +
scale_color_manual(values = c(tableau_color_pal('Classic 10')(5), "#a6a6a6", "#333333")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dashed", "dashed")) +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5), legend.title = element_blank(), legend.position = "top",
legend.text = element_text(size = 10), axis.title = element_text(size = 10, face = "bold"), axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 70, hjust = 1), panel.grid = element_blank(), panel.background = element_blank(), axis.line = element_line()) #+
#annotate("rect", xmin = 15, xmax = 35, ymin = 8, ymax = 12, fill = rpt_gray) +
#annotation_custom(age_grob, xmin = 15.5, xmax = 34.5, ymin = 8.5, ymax = 11.5)
#Prepping data for age graph
age_ili$weekStarts <- factor(age_ili$weekStarts, levels = weekStarts$weekStarts, ordered = T)
#Adding gray box text
age_grob <- splitTextGrob("A 2010 influenza modeling study concluded mass gatherings and traveling can worsen the overall attack rate and peak prevalence, when they occur close to the peak of an influenza epidemic. Emphasize respiratory hygiene during holiday gatherings.", gp = gpar(fontsize=9.5))
#age graph
ggplot(data = age_ili, aes(x = weekStarts, y = count, group = age)) +
geom_line(aes(linetype = age, color = age), size = 1) +
labs(title = "Syndromic Surveillance by Age Group", x = "Week Start Date", y = "% of Visits for ILI") +
scale_color_manual(values = c(tableau_color_pal('Classic 10')(5), "#a6a6a6", "#333333")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dashed", "dashed")) +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5), legend.title = element_blank(), legend.position = "top",
legend.text = element_text(size = 10), axis.title = element_text(size = 10, face = "bold"), axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 70, hjust = 1), panel.grid = element_blank(), panel.background = element_blank(), axis.line = element_line()) +
annotate("rect", xmin = 15, xmax = 35, ymin = 8, ymax = 12, fill = rpt_gray) +
annotation_custom(age_grob, xmin = 15.5, xmax = 34.5, ymin = 8.5, ymax = 11.5)
#Prepping data for age graph
age_ili$weekStarts <- factor(age_ili$weekStarts, levels = weekStarts$weekStarts, ordered = T)
#Adding gray box text
age_grob <- splitTextGrob("A 2010 influenza modeling study concluded mass gatherings and traveling can worsen the overall attack rate and peak prevalence, when they occur close to the peak of an influenza epidemic. Emphasize respiratory hygiene during holiday gatherings.", gp = gpar(fontsize=9.5))
#age graph
ggplot(data = age_ili, aes(x = weekStarts, y = count, group = age)) +
geom_line(aes(linetype = age, color = age), size = 1) +
labs(title = "Syndromic Surveillance by Age Group", x = "Week Start Date", y = "% of Visits for ILI") +
scale_color_manual(values = c(tableau_color_pal('Classic 10')(5), "#a6a6a6", "#333333")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dashed", "dashed")) +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5), legend.title = element_blank(), legend.position = "top",
legend.text = element_text(size = 10), axis.title = element_text(size = 10, face = "bold"), axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 70, hjust = 1), panel.grid = element_blank(), panel.background = element_blank(), axis.line = element_line()) +
annotate("rect", xmin = 20, xmax = 40, ymin = 6, ymax = 15.5, fill = rpt_gray) +
annotation_custom(age_grob, xmin = 20.5, xmax = 39.5, ymin = 6.5, ymax = 15)
#Prepping data for age graph
age_ili$weekStarts <- factor(age_ili$weekStarts, levels = weekStarts$weekStarts, ordered = T)
#Adding gray box text
age_grob <- splitTextGrob("A 2010 influenza modeling study concluded mass gatherings and traveling can worsen the overall attack rate and peak prevalence, when they occur close to the peak of an influenza epidemic. Emphasize respiratory hygiene during holiday gatherings.", gp = gpar(fontsize=9.5))
#age graph
ggplot(data = age_ili, aes(x = weekStarts, y = count, group = age)) +
geom_line(aes(linetype = age, color = age), size = 1) +
labs(title = "Syndromic Surveillance by Age Group", x = "Week Start Date", y = "% of Visits for ILI") +
scale_color_manual(values = c(tableau_color_pal('Classic 10')(5), "#a6a6a6", "#333333")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dashed", "dashed")) +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5), legend.title = element_blank(), legend.position = "top",
legend.text = element_text(size = 10), axis.title = element_text(size = 10, face = "bold"), axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 70, hjust = 1), panel.grid = element_blank(), panel.background = element_blank(), axis.line = element_line()) +
annotate("rect", xmin = 19.5, xmax = 40, ymin = 6, ymax = 15.5, fill = rpt_gray) +
annotation_custom(age_grob, xmin = 20.5, xmax = 39.5, ymin = 6.5, ymax = 15)
#Prepping data for age graph
age_ili$weekStarts <- factor(age_ili$weekStarts, levels = weekStarts$weekStarts, ordered = T)
#Adding gray box text
age_grob <- splitTextGrob("A 2010 influenza modeling study concluded mass gatherings and traveling can worsen the overall attack rate and peak prevalence, when they occur close to the peak of an influenza epidemic. Emphasize respiratory hygiene during holiday gatherings.", gp = gpar(fontsize=9.5))
#age graph
ggplot(data = age_ili, aes(x = weekStarts, y = count, group = age)) +
geom_line(aes(linetype = age, color = age), size = 1) +
labs(title = "Syndromic Surveillance by Age Group", x = "Week Start Date", y = "% of Visits for ILI") +
scale_color_manual(values = c(tableau_color_pal('Classic 10')(5), "#a6a6a6", "#333333")) +
scale_linetype_manual(values = c("solid", "solid", "solid", "solid", "solid", "dashed", "dashed")) +
theme(plot.title = element_text(size = 12, face = "bold", hjust = 0.5), legend.title = element_blank(), legend.position = "top",
legend.text = element_text(size = 10), axis.title = element_text(size = 10, face = "bold"), axis.text = element_text(size = 10),
axis.text.x = element_text(angle = 70, hjust = 1), panel.grid = element_blank(), panel.background = element_blank(), axis.line = element_line()) +
annotate("rect", xmin = 20, xmax = 40, ymin = 5.5, ymax = 15.5, fill = rpt_gray) +
annotation_custom(age_grob, xmin = 20.5, xmax = 39.5, ymin = 6.5, ymax = 15)
View(age_ili)
shiny::runApp('S:/Enhanced Surveillance/Flu Surveillance/Shiny Application/Application')
zips_API <- paste0("https://essence.syndromicsurveillance.org/nssp_essence/api/tableBuilder?percentParam=medicalGrouping&medicalGroupingSystem=essencesyndromes&userId=660&medicalGrouping=ili&geographySystem=zipcode&site=890&geography=60004,60005,60007,60008,60010,60015,60016,60018,60022,60025,60026,60029,60035,60043,60047,60053,60056,60062,60067,60068,60070,60074,60076,60077,60089,60090,60091,60093,60103,60104,60106,60107,60110,60118,60120,60126,60130,60131,60133,60141,60143,60153,60154,60155,60160,60162,60163,60164,60165,60169,60171,60172,60173,60176,60191,60192,60193,60194,60195,60201,60202,60203,60301,60302,60304,60305,60402,60406,60409,60411,60415,60417,60419,60422,60423,60425,60426,60428,60429,60430,60438,60439,60441,60443,60445,60448,60449,60452,60453,60455,60456,60457,60458,60459,60461,60462,60463,60464,60465,60466,60467,60469,60471,60472,60473,60475,60476,60477,60478,60480,60482,60487,60491,60501,60513,60521,60523,60525,60526,60527,60534,60546,60558,60706,60707,60712,60714,60803,60804,60805,60827&datasource=va_er&timeResolution=weekly&hasBeenE=1&aqtTarget=TableBuilder&detector=nodetectordetector&fieldIDs=geographyzipcode&fieldIDs=timeResolution&fieldLabels=Zipcode&fieldLabels=Week&displayTotals=false&displayTotals=false&displayZeroCountRows=true&graphWidth=604&portletId=108910&dateconfig=15&startDate=", format(MMWRweek2Date(MMWRyear = season, MMWRweek = 35), "%d%b%Y"),"&endDate=", format(end, "%d%b%Y"), "&rowFields=geographyzipcode&columnField=timeResolution")
nssp_zips <- nssp_get_table(zips_API) %>%
select(-numerator, -denominator)%>%
spread(timeResolution, count) %>%
mutate(geographyzipcode = as.numeric(geographyzipcode))
View(nssp_zips)
colnames(nssp_zips) = gsub("20\\d\\d\\-", "Week_", colnames(nssp_zips))
#Join ED data to shapefile
zips@data <- left_join(zips@data, nssp_zips, by = c("ZCTA5CE10" = "geographyzipcode"))
#Remove Chicago zip codes from shapefile
zips <- zips[!is.na(zips$Week_35), ]
zips@data %>% View()
#Importing 2016 Cook (plus borders) zip codes, hospital, and svi shapefiles
zips <- readOGR(dsn = "S:/Enhanced Surveillance/Flu Surveillance/Shiny Application/Maps", layer = "Cook_Zip_Codes", verbose = FALSE)
zips@data %>%View()
glimpse(zips@data)
glimpse(nssp_zips)
#Join ED data to shapefile
zips@data <- left_join(zips@data, nssp_zips, by = c("ZCTA5CE10" = "geographyzipcode"))
zips@data %>% View()
#Remove Chicago zip codes from shapefile
zips <- zips[!is.na(zips@data$Week_35), ]
zips@data %>% View()
#Saving data for use in app files
save(fluedyr, fluedage, labcount, zips, hospitals, icu, pi, baseline_ess, baseline_sent, start, season, week, risk_level, svi,
file = "S:/Enhanced Surveillance/Flu Surveillance/Shiny Application/Application/flu.Rdata")
getwd()
setwd("S:/Enhanced Surveillance/Flu Surveillance/Shiny Application/Application")
load("flu.Rdata")
runApp()
zips@data %>% View()
input <- list()
input$mapweek <- "50"
input$mapweek <- "12-08-19"
MMWRweek(input$mapweek)[1,2]
as.Date("12-08-19", format("%m-%d-%y"))
as.Date(input$mapweek, format("%m-%d-%y"))
MMWRweek(as.Date(input$mapweek, format("%m-%d-%y")))[1,2]
runApp()
grep(MMWRweek(as.Date(input$mapweek, format("%m-%d-%y")))[1,2], colnames(zips@data))
colnames(zips@data)
tempweek <- grep(MMWRweek(as.Date(input$mapweek, format("%m-%d-%y")))[1,2], colnames(zips@data))
mapdata <- zips[,c(1:10, tempweek]
mapdata <- zips[,c(1:10, tempweek)]
names(mapdata) <- gsub("_.*","",names(mapdata))
mapdata@data %>% View()
mapdata <- zips[,c(1, tempweek)]
names(mapdata) <- gsub("_.*","",names(mapdata))
mapdata@data %>% View()
View(nssp_zips)
runApp()
